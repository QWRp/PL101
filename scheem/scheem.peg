start = 
    implicitbegin / expression

implicitbegin =
    e1:expression e2:expression+
    { return ['begin'].concat([e1]).concat(e2); }

expression =
	ws? e:( atom / expressionlist / quote ) ws?
	{ return e; }
	
atom =
    "#t"
    { return true; }
  / "#f"
    { return false; }
  / n:numbers+ e:("." numbers+)?
    { var k = e[1] || []; return parseFloat(n.join("") + "." + k.join("")); }
  / chars:validchar+
    { return chars.join(""); }

expressionlist =
	"(" e:expression* ")"
	{ return e; }

quote =
	"'" e:expression
	{ return ["quote", e] }
	
ws = (comment / whitespace)+
whitespace = [ \n\t\r]
comment =
	";;" [^\n\r]*
	{ return ""; }

chars = [a-zA-Z_?!+-=@#$%^&*/.<>]
numbers = [0-9]
validchar = chars / numbers